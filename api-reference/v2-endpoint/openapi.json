{
  "openapi": "3.1.0",
  "info": {
    "title": "Null Drop API v2",
    "description": "Optimized API for file management (upload, download, list, delete)",
    "version": "2.0.0"
  },
  "servers": [
    {
      "url": "https://nulldrop.xyz/api/v2"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/upload": {
      "post": {
        "summary": "Upload a file",
        "description": "Upload a single file to Null Drop with optional visibility control",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": ["file"],
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "File to upload"
                  },
                  "isPublic": {
                    "type": "string",
                    "enum": ["true", "false"],
                    "default": "true",
                    "description": "File visibility - true for public, false for private"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "File uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadResponse"
                }
              }
            }
          },
          "400": {
            "description": "Upload failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Rate limited",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/upload/bulk": {
      "post": {
        "summary": "Upload multiple files",
        "description": "Upload up to 50 files simultaneously with parallel processing",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": ["files"],
                "properties": {
                  "files": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    },
                    "description": "Array of files to upload (max 50)"
                  },
                  "isPublic": {
                    "type": "string",
                    "enum": ["true", "false"],
                    "default": "true",
                    "description": "File visibility - applies to all files"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Files processed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkUploadResponse"
                }
              }
            }
          },
          "400": {
            "description": "Upload failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Rate limited",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/files": {
      "get": {
        "summary": "List uploaded files",
        "description": "Get list of uploaded files with pagination",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "List of files",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/files/{id}": {
      "get": {
        "summary": "Get file details",
        "description": "Get details of a specific file",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "File ID"
          }
        ],
        "responses": {
          "200": {
            "description": "File details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileResponse"
                }
              }
            }
          },
          "404": {
            "description": "File not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a file",
        "description": "Permanently delete a file",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "File ID"
          }
        ],
        "responses": {
          "200": {
            "description": "File deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResponse"
                }
              }
            }
          },
          "404": {
            "description": "File not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/files/{id}/download": {
      "get": {
        "summary": "Download a file",
        "description": "Download file content",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "File ID"
          }
        ],
        "responses": {
          "200": {
            "description": "File content",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "File not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/files/bulk": {
      "delete": {
        "summary": "Delete multiple files",
        "description": "Delete up to 50 files simultaneously with parallel processing",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["fileIds"],
                "properties": {
                  "fileIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Array of file IDs to delete (max 50)",
                    "example": ["abc123", "def456", "ghi789"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Files processed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkDeleteResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "UploadResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "object",
            "properties": {
              "id": { 
                "type": "string",
                "description": "File ID"
              },
              "filename": { 
                "type": "string",
                "description": "Original filename"
              },
              "size": { 
                "type": "integer",
                "description": "File size in bytes"
              },
              "mimeType": { 
                "type": "string",
                "description": "MIME type"
              },
              "downloadUrl": { 
                "type": "string",
                "description": "Download URL"
              },
              "shareUrl": { 
                "type": "string",
                "description": "Share URL"
              },
              "isPublic": {
                "type": "boolean",
                "description": "File visibility status"
              },
              "uploadedAt": { 
                "type": "string", 
                "format": "date-time",
                "description": "Upload timestamp"
              }
            }
          },
          "_perf": {
            "type": "integer",
            "description": "Request duration in milliseconds"
          }
        }
      },
      "FileListResponse": {
        "type": "object",
        "properties": {
          "success": { "type": "boolean" },
          "data": {
            "type": "object",
            "properties": {
              "files": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/File" }
              },
              "total": {
                "type": "integer",
                "description": "Total number of files"
              },
              "page": {
                "type": "integer",
                "description": "Current page"
              },
              "limit": {
                "type": "integer",
                "description": "Items per page"
              }
            }
          }
        }
      },
      "FileResponse": {
        "type": "object",
        "properties": {
          "success": { "type": "boolean" },
          "data": { "$ref": "#/components/schemas/File" }
        }
      },
      "File": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "filename": { "type": "string" },
          "originalName": { "type": "string" },
          "size": { "type": "integer" },
          "mimeType": { "type": "string" },
          "downloadUrl": { "type": "string" },
          "shareUrl": { "type": "string" },
          "isPublic": { "type": "boolean" },
          "downloadCount": { "type": "integer" },
          "uploadedAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" },
          "expiresAt": { "type": ["string", "null"], "format": "date-time" }
        }
      },
      "DeleteResponse": {
        "type": "object",
        "properties": {
          "success": { "type": "boolean" },
          "data": {
            "type": "object",
            "properties": {
              "message": { "type": "string" }
            }
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": { 
            "type": "string",
            "description": "Error message"
          },
          "code": { 
            "type": "string",
            "description": "Error code"
          }
        }
      },
      "BulkUploadResponse": {
        "type": "object",
        "properties": {
          "success": { "type": "boolean" },
          "data": {
            "type": "object",
            "properties": {
              "total": {
                "type": "integer",
                "description": "Total number of files processed"
              },
              "successful": {
                "type": "integer",
                "description": "Number of successful uploads"
              },
              "failed": {
                "type": "integer",
                "description": "Number of failed uploads"
              },
              "results": {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "success": { "type": "boolean", "example": true },
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": { "type": "string" },
                            "filename": { "type": "string" },
                            "size": { "type": "integer" },
                            "mimeType": { "type": "string" },
                            "downloadUrl": { "type": "string" },
                            "shareUrl": { "type": "string" },
                            "isPublic": { "type": "boolean" },
                            "uploadedAt": { "type": "string", "format": "date-time" }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "success": { "type": "boolean", "example": false },
                        "filename": { "type": "string" },
                        "error": { "type": "string" },
                        "code": { "type": "string" }
                      }
                    }
                  ]
                }
              }
            }
          },
          "_perf": {
            "type": "integer",
            "description": "Request duration in milliseconds"
          }
        }
      },
      "BulkDeleteResponse": {
        "type": "object",
        "properties": {
          "success": { "type": "boolean" },
          "data": {
            "type": "object",
            "properties": {
              "total": {
                "type": "integer",
                "description": "Total number of files processed"
              },
              "successful": {
                "type": "integer",
                "description": "Number of successful deletes"
              },
              "failed": {
                "type": "integer",
                "description": "Number of failed deletes"
              },
              "results": {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "success": { "type": "boolean", "example": true },
                        "id": { "type": "string" },
                        "filename": { "type": "string" }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "success": { "type": "boolean", "example": false },
                        "id": { "type": "string" },
                        "error": { "type": "string" },
                        "code": { "type": "string" }
                      }
                    }
                  ]
                }
              }
            }
          },
          "_perf": {
            "type": "integer",
            "description": "Request duration in milliseconds"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "description": "API key authentication (format: nd_xxxxx)"
      }
    }
  }
}